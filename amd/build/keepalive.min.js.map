{"version":3,"file":"keepalive.min.js","sources":["../src/keepalive.js"],"sourcesContent":["/**\n * Local plugin \"Session keepalive\" - JS Code\n *\n * @module    local_session_keepalive/keepalive\n * @copyright 2017 Alexander Bias, University of Ulm <alexander.bias@uni-ulm.de>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/config', 'core/log'], function($, config, log) {\n    \"use strict\";\n\n    // Global variable for keepalive interval.\n    var keepaliveInterval = null;\n\n    // Global variable for holding the form elements within the page's main region.\n    var formElements = null;\n\n    // Global variable for holding the dirty status.\n    var dirty = false;\n\n    /**\n     * Function to tell the server to keep the session alive.\n     */\n    function doKeepAlive() {\n        // Keep session alive by AJAX.\n        // We know about the benefits of the core/ajax module (https://docs.moodle.org/dev/AJAX),\n        // but for this very lightweight request we only use a simple jQuery AJAX call.\n        $.ajax({\n            url: config.wwwroot + '/local/session_keepalive/sessionkeepalive_ajax.php',\n            dataType: 'json',\n            type: 'POST',\n            data: {\n                // Add the session key.\n                'sesskey': config.sesskey,\n                // Add a query string to prevent older versions of IE from using the cache.\n                'time': Date.now()\n            },\n            headers: {\n                'Cache-Control': 'no-cache',\n                'Expires': '-1'\n            },\n            /* This section exists for understanding the code, but it is commented because it does nothing.\n            success: function(result) {\n                // The AJAX call was successful.\n                if (result.status == 200) {\n                    // Don't care about the result (especially as there isn't any result sent back).\n                }\n            },\n            */\n            error: function(request) {\n                // The AJAX call returned 403, we have to assume that the session was terminated and can't be kept alive anymore.\n                if (request.status == 403) {\n                    // Stop doing any more requests.\n                    clearInterval(keepaliveInterval);\n\n                    // The AJAX call was cached somewhere.\n                } else if (request.status >= 300 && request.status <= 399) {\n                    // Warn the developer, but don't do anything else.\n                    log.debug('moodle-local_session_keepalive-keepalive: ' +\n                            'A cached copy of the keepalive answer was returned so it\\'s reliablity cannot be guaranteed');\n                }\n            }\n        });\n    }\n\n    /**\n     * Function which performs the continuous keepalive check.\n     */\n    function checkKeepAlive() {\n        // If the page is currently marked dirty.\n        if (dirty === true) {\n            // Keep the Moodle session of this user alive.\n            doKeepAlive();\n        }\n    }\n\n    /**\n     * Function to mark the page as currently dirty.\n     */\n    function markDirty() {\n        // Remember that the page is now dirty.\n        dirty = true;\n\n        // Now that the page is marked dirty, it has to be dirty until it is sent to the server.\n        // We don't need the event listeners anymore.\n        formElements.off('change keyup keydown', markDirty);\n    }\n\n    return {\n        init: function(params) {\n            // Initialize continuous keepalive check.\n            if (params.keepaliveinterval !== null && params.keepaliveinterval > 0) {\n                // Search all existing form elements within the page's main region.\n                formElements = $('#region-main input, #region-main textarea, #region-main select');\n\n                // If there are any form elements.\n                if (formElements.length > 0) {\n                    // Add the event listeners to the form elements.\n                    formElements.on('change keyup keydown', markDirty);\n\n                    // Keepalive every params.keepaliveinterval minutes.\n                    keepaliveInterval = setInterval(checkKeepAlive, params.keepaliveinterval * 1000 * 60);\n                }\n            }\n        }\n    };\n});\n"],"names":["define","$","config","log","keepaliveInterval","formElements","dirty","checkKeepAlive","ajax","url","wwwroot","dataType","type","data","sesskey","Date","now","headers","error","request","status","clearInterval","debug","markDirty","off","init","params","keepaliveinterval","length","on","setInterval"],"mappings":";;;;;;;AAQAA,2CAAO,CAAC,SAAU,cAAe,aAAa,SAASC,EAAGC,OAAQC,SAI1DC,kBAAoB,KAGpBC,aAAe,KAGfC,OAAQ,WAkDHC,kBAES,IAAVD,OA3CJL,EAAEO,KAAK,CACHC,IAAKP,OAAOQ,QAAU,qDACtBC,SAAU,OACVC,KAAM,OACNC,KAAM,SAESX,OAAOY,aAEVC,KAAKC,OAEjBC,QAAS,iBACY,mBACN,MAUfC,MAAO,SAASC,SAEU,KAAlBA,QAAQC,OAERC,cAAcjB,mBAGPe,QAAQC,QAAU,KAAOD,QAAQC,QAAU,KAElDjB,IAAImB,MAAM,oJAqBjBC,YAELjB,OAAQ,EAIRD,aAAamB,IAAI,uBAAwBD,iBAGtC,CACHE,KAAM,SAASC,QAEsB,OAA7BA,OAAOC,mBAA8BD,OAAOC,kBAAoB,IAEhEtB,aAAeJ,EAAE,mEAGA2B,OAAS,IAEtBvB,aAAawB,GAAG,uBAAwBN,WAGxCnB,kBAAoB0B,YAAYvB,eAA2C,IAA3BmB,OAAOC,kBAA2B"}